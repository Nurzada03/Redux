{"ast":null,"code":"import { createStore } from \"redux\";\nexport const calculatorActionTypes = {\n  ADD: \"ADD\",\n  SUBTRACT: \"SUBTRACT\",\n  DIVIDE: \"DIVIDE\",\n  MULTIPLY: \"MULTIPLY\"\n};\nconst initialState = {\n  result: 0\n};\nconst calculatorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case calculatorActionTypes.ADD:\n      return {\n        ...state,\n        result: state.result + action.payload\n      };\n    case calculatorActionTypes.SUBTRACT:\n      return {\n        ...state,\n        result: state.result - action.payload\n      };\n    case calculatorActionTypes.DIVIDE:\n      return {\n        ...state,\n        result: state.result / action.payload\n      };\n    case calculatorActionTypes.MULTIPLY:\n      return {\n        ...state,\n        result: state.result * action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const store = createStore(calculatorReducer);\nstore.subscribe(() => {});","map":{"version":3,"names":["createStore","calculatorActionTypes","ADD","SUBTRACT","DIVIDE","MULTIPLY","initialState","result","calculatorReducer","state","action","type","payload","store","subscribe"],"sources":["C:/Users/Lenovo/OneDrive/Рабочий стол/redux-starter/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\n\r\n export const calculatorActionTypes = {\r\n  ADD: \"ADD\",\r\n  SUBTRACT: \"SUBTRACT\",\r\n  DIVIDE: \"DIVIDE\",\r\n  MULTIPLY: \"MULTIPLY\",\r\n};\r\n\r\nconst initialState = {\r\n  result: 0,\r\n};\r\n\r\nconst calculatorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case calculatorActionTypes.ADD:\r\n      return {\r\n        ...state,\r\n        result: state.result + action.payload,\r\n      };\r\n    case calculatorActionTypes.SUBTRACT:\r\n      return {\r\n        ...state,\r\n        result: state.result - action.payload,\r\n      };\r\n\r\n    case calculatorActionTypes.DIVIDE:\r\n      return {\r\n        ...state,\r\n        result: state.result / action.payload,\r\n      };\r\n\r\n    case calculatorActionTypes.MULTIPLY:\r\n      return {\r\n        ...state,\r\n        result: state.result * action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n export const store = createStore(calculatorReducer);\r\n\r\n\r\n store.subscribe(() => {})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAElC,OAAO,MAAMC,qBAAqB,GAAG;EACpCC,GAAG,EAAE,KAAK;EACVC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,iBAAiB,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,qBAAqB,CAACC,GAAG;MAC5B,OAAO;QACL,GAAGO,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IACH,KAAKX,qBAAqB,CAACE,QAAQ;MACjC,OAAO;QACL,GAAGM,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IAEH,KAAKX,qBAAqB,CAACG,MAAM;MAC/B,OAAO;QACL,GAAGK,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IAEH,KAAKX,qBAAqB,CAACI,QAAQ;MACjC,OAAO;QACL,GAAGI,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IAEH;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AAEA,OAAO,MAAMI,KAAK,GAAGb,WAAW,CAACQ,iBAAiB,CAAC;AAGnDK,KAAK,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}